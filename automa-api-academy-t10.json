{
	"info": {
		"_postman_id": "f0ff13ba-926f-44b0-bf25-595767ba28ad",
		"name": "QA Coders - Academy Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27586921",
		"_collection_link": "https://martian-firefly-596159.postman.co/workspace/API-Academy~fcd8f42b-f9d2-43fc-8b48-ce5f83233755/collection/27586921-f0ff13ba-926f-44b0-bf25-595767ba28ad?action=share&source=collection_link&creator=27586921"
	},
	"item": [
		{
			"name": "Config",
			"item": [
				{
					"name": "Token - admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// salvando o token na globals\r",
									"pm.globals.set(\"tokenAdmin\", JSON.parse(responseBody).token);\r",
									"\r",
									"// teste de status\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\":\"{{MailAdmin}}\",\r\n    \"password\":\"{{PasswordAdmin}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/login/",
							"host": [
								"{{url}}api"
							],
							"path": [
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// salvando token na globals\r",
									"pm.globals.set(\"token\", JSON.parse(responseBody).token);\r",
									"\r",
									"\r",
									"// teste de status\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\":\"{{mailLogin}}\",\r\n    \"password\":\"{{passwordLogin}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/login/",
							"host": [
								"{{url}}api"
							],
							"path": [
								"login",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "API Register",
					"item": [
						{
							"name": "Success",
							"item": [
								{
									"name": "success admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// FUNÇÃO DE FIRST NAME + LAST NAME = FullName\r",
													"function firstName(){\r",
													"    var firstName = [\"Thaís\", \"Marcos\", \"Rose\", \"Miguel\",\"Helena\",\"Heitor\",\"Bernardo\",\"Arthur\",\"Maria\",\"Laura\",\"Lucas\",\"Davi\",\"Alice\",\"Gabriel\",\"Cecilia\",\"Pedro\",\"Theo\",\"Valentina\",\"Sofia\",\"Julia\",\"Manuela\",\"Luisa\",\"Lorenzo\",\"Maite\",\"Samuel\",\"Lara\",\"Isis\",\"Pedro\",\"Gustavo\",\"Nicolas\",\"Elisa\", , \"Nexus\", \"Orbit\", \"Virtue\", \"Zenith\", \"Quantum\", \"Streamline\", \"Vortex\", \"Fusion\", \"Catalyst\", \"Zen\", \"Pulse\", \"Precision\", \"Vertex\", \"Endeavor\", \"Nova\", \"Odyssey\", \"Agile\", \"Infinity\", \"Evolve\", \"Synergy\", \"Solstice\", \"Dynamo\", \"Pinnacle\", \"Echo\", \"Elemental\", \"Spectrum\", \"Summit\", \"Horizon\", \"Genesis\", \"Eclipse\", \"Amplify\", \"catalyst\", \"Momentum\", \"Perspective\", \"Enigma\", \"Reboot\", \"Infinity\", \"Synapse\", \"Nexus\", \"Luminary\", \"Radiant\", \"Flux\", \"Momentum\", \"Legacy\", \"Aurora\", \"Phoenix\", \"Spectrum\", \"Zenith\", \"Velocity\", \"Unity\", \"Visionary\", \"Quantum\", \"Odyssey\", \"Luminate\", \"Fusion\", \"Dynamo\", \"Virtuoso\", \"Nova\", \"Quest\", \"Pulse\", \"Apex\", \"Envision\", \"Horizon\", \"Illuminate\", \"Catalyst\", \"Thrive\", \"Venture\", \"Synergy\", \"Summit\", \"Apex\", \"Genesis\", \"Pinnacle\", \"Fusion\", \"Evolve\", \"Momentum\", \"Zenith\", \"Vortex\", \"Nexus\", \"Quantum\", \"Echo\", \"Phoenix\", \"Spectrum\", \"Radiant\", \"Synergy\", \"Legacy\", \"Evolve\", \"Odyssey\", \"Virtue\", \"Nova\", \"Horizon\", \"Visionary\", \"Catalyst\", \"Genesis\", \"Pulse\", \"Vertex\"];\r",
													"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"FirstName\", firstName());\r",
													"\r",
													"function lastName(){\r",
													"    var lastName = [\"Marchetti\", \"Contó\", \"Oliveira\",\"Almeida\",\"Alves\",\"Andrade\",\"Barbosa\",\"Barros\",\"Batista\",\"Borges\",\"Campos\",\"Cardoso\",\"Carvalho\",\"Castro\",\"Costa\",\"Dias\",\"Freitas\",\"Fernandes\",\"Ferreira\",\"Garcia\",\"Gomes\",\"Gonçalves\",\"Lima\",\"Lopes\",\"Machado\",\"Marques\",\"Martins\",\"Medeiros\",\"Melo\",\"Mendes\",\"Miranda\",\"Monteiro\",\"Moraes\",\"Moreira\",\"Nunes\",\"Pereira\",\"Ramos\",\"Reis\",\"Ribeiro\",\"Rocha\",\"Santos\",\"Silva\",\"Soares\",\"Souza\",\"Teixeira\",\"Vieira\"];\r",
													"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"LastName\", lastName());\r",
													"\r",
													"pm.environment.set(\"FullName\", pm.variables.get(\"FirstName\") + \" \" + pm.variables.get(\"LastName\"));\r",
													"\r",
													"// ------------------------------------------------------------------------------------\r",
													"\r",
													"// FUNÇÃO PARA E-MAIL: full name + domain\r",
													"function domain(){\r",
													"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
													"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"Domain\", domain());\r",
													"\r",
													"function user(){\r",
													"    var user = pm.variables.get(\"FullName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
													"    return user;\r",
													"}\r",
													"\r",
													"pm.environment.set(\"User\", user());\r",
													"\r",
													"pm.environment.set(\"Mail\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
													"\r",
													"\r",
													"// ------------------------------------------------------------------------------------\r",
													"\r",
													"//FUNÇÃO CPF: 9 numeros\r",
													"function cpf() {\r",
													"  const rnd = (n) => Math.round(Math.random() * n);\r",
													"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)\r",
													"  const n = Array(9).fill('').map(() => rnd(9));\r",
													"\r",
													"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)\r",
													"  d1 = 11 - mod(d1, 11);\r",
													"  if (d1 >= 10) d1 = 0;\r",
													"  \r",
													"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)\r",
													"  d2 = 11 - mod(d2, 11);\r",
													"  if (d2 >= 10) d2 = 0;\r",
													"\r",
													"  return `${n.join('')}${d1}${d2}`;\r",
													"}\r",
													"\r",
													"pm.environment.set(\"CPF\", cpf());\r",
													"\r",
													"// ------------------------------------------------------------------------------------\r",
													"\r",
													"// FUNÇÃO SENHA: 8-12 caracteres, uma maiuscula, uma minuscula, um especial @#$% e numeros\r",
													"function gerarSenha(){\r",
													"    \r",
													"    const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
													"    const comprimentoMinimo = 8;\r",
													"    const comprimentoMaximo = 16;\r",
													"\r",
													"    let senhaArray = [];\r",
													"\r",
													"    // garantir um de cada tipo\r",
													"    senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); // caractere maiusculo\r",
													"    senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); // caractere minusculo\r",
													"    senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); // número\r",
													"    senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); // caractere especial\r",
													"\r",
													"    //verificar se ficou dentro do mínimo e máximo\r",
													"    const comprimmentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
													"\r",
													"    //se ficou menor que o mínimo, preencher com qualquer caractere\r",
													"    for (let i = 0; i < comprimmentoRestante; i++){\r",
													"        senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
													"    }\r",
													"\r",
													"    // retornar a senha embaralhada\r",
													"    return shuffleString(senhaArray.join(\"\"));\r",
													"}\r",
													"\r",
													"//função para embaralhar a senha\r",
													"function shuffleString(string){\r",
													"    return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
													"}\r",
													"\r",
													"//salvando na variavel Password\r",
													"pm.environment.set(\"Password\", gerarSenha());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// salvando o ID na globals\r",
													"pm.globals.set(\"IDUserAdmin\", JSON.parse(responseBody).user._id);\r",
													"\r",
													"pm.test('Response status code is Create 201', function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Check FullName\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).user.fullName).to.eql(pm.environment.get(\"FullName\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check Mail\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).user.mail).to.eql(pm.environment.get(\"Mail\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Test CPF\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).user.cpf).to.eql(pm.environment.get(\"CPF\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{CPF}}\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Exception FullName",
							"item": [
								{
									"name": "name empity",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo nome completo é obrigatório.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{CPF}}\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "first name only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"Informe o nome e sobrenome com as iniciais em letra maiúscula.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FirstName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{CPF}}\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "name > 100 caracteres",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O nome completo deve ter no máximo 100 caracteres.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"Abcdefghijklmnopqrstuvwxyz Abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{CPF}}\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "name =! letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"Informe o nome e sobrenome com as iniciais em letra maiúscula.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"Nome 123\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{CPF}}\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Exception Mail",
							"item": [
								{
									"name": "mail empity",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo e-mail é obrigatório.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FullName}}\",\r\n    \"mail\": \"\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{CPF}}\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "mail incorrect space",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FullName}}\",\r\n    \"mail\": \"mail @dominio.com\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{CPF}}\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Exception Cpf",
							"item": [
								{
									"name": "cpf empity",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo CPF é obrigatório!\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "cpf less than 11 digits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"Deve preencher o CPF com 11 dígitos\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"1234567890\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "cpf incorrect letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"Campo CPF deve conter apenas números\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"123g4567891\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "cpf incorrect more than 11 digits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"Deve preencher o CPF com 11 dígitos\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"123456789012\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "cpf incorrect with dot",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"Deve preencher o CPF com 11 dígitos\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"123.123.123.23\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Excpetion Password",
							"item": [
								{
									"name": "password empity",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"Campo senha é obrigatório\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{CPF}}\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "password < 8 digits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-16.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"1234567\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{CPF}}\",\r\n    \"confirmPassword\": \"1234567\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "password > 16 digits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-16.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"12345678901234567\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{CPF}}\",\r\n    \"confirmPassword\": \"12345678901234567\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Exception ConfirmPassword",
							"item": [
								{
									"name": "confirm password empity",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo de confirmação de senha não pode ficar vazio.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{CPF}}\",\r\n    \"confirmPassword\": \"\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "confirm password incorrect",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"As senhas não coincidem.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fullName\":\"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"accessProfile\": \"ADMIN\",\r\n    \"cpf\": \"{{CPF}}\",\r\n    \"confirmPassword\": \"confirm\",\r\n    \"audit\": [\r\n        {\r\n            \"idCompany\": \"Qa-Coders\",\r\n            \"loginUser\": \"Test-0000\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												""
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "API Lsit",
					"item": [
						{
							"name": "list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"/*\r",
											"pm.test(\"Check if list is not empty\", function() {\r",
											"    pm.expect(user.length > 0).to.be.true;\r",
											"});\r",
											"*/\r",
											"\r",
											"//ordem alfabética\r",
											"\r",
											"// mostra 50 registros por aba"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/user/",
									"host": [
										"{{url}}api"
									],
									"path": [
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "list count",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test(\"Check count is number\", function () {\r",
											"    pm.expect(JSON.parse(responseBody).count).to.be.a('Number')\r",
											"});\r",
											"\r",
											"pm.test(\"Check count is equal or greater than zero\", function () {\r",
											"    pm.expect(JSON.parse(responseBody).count).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Check count is present in the response\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('count');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/user/count",
									"host": [
										"{{url}}api"
									],
									"path": [
										"user",
										"count"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "API Edit",
					"item": [
						{
							"name": "FullName",
							"item": [
								{
									"name": "fullname = lower letters",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"Informe o nome e sobrenome com as iniciais em letra maiúscula.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"nome sobrenome\",\r\n  \"mail\": \"{{Mail}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "fullname = only first name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"Informe o nome e sobrenome com as iniciais em letra maiúscula.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"Nome\",\r\n  \"mail\": \"{{Mail}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "fullname > 100 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O nome completo deve ter no máximo 100 caracteres.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"Abcdefghijklmnopqrstuvwxyz Abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\",\r\n  \"mail\": \"{{Mail}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "fullname empity",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo nome completo é obrigatório.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"\",\r\n  \"mail\": \"{{Mail}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "email incorrect - space",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"Elisa costa@qacoders.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "email incorrect domain",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"Elisacosta@qacoders\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "email incorrect - space Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"Elisa costa@qacoders.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "email empity",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo e-mail é obrigatório.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "sucess",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Verify the success message\", function (){\r",
													"    pm.expect(`Dados atualizados com sucesso!`).to.eql(JSON.parse(responseBody).msg);\r",
													"})\r",
													"\r",
													"pm.test(\"Verify the FullName\", function(){\r",
													"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).updatedUser.fullName);\r",
													"});\r",
													"\r",
													"pm.test(\"Verify the Mail\", function(){\r",
													"    pm.expect(pm.environment.get(\"Mail\")).to.eql(JSON.parse(responseBody).updatedUser.mail);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Mail}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PassWord",
							"item": [
								{
									"name": "sucess",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Senha atualizada com sucesso!\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"1234@Testee\",\r\n  \"confirmPassword\": \"1234@Testee\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/password/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"password",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "password empity",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"Campo senha é obrigatório\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"\",\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/password/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"password",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "confirmpassword empity",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo de confirmação de senha não pode ficar vazio.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"1234@Test\",\r\n  \"confirmPassword\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/password/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"password",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "confirm password incorrect",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"As senhas não coincidem.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"12345@Test\",\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/password/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"password",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Status",
							"item": [
								{
									"name": "sucess",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Status do usuario atualizado com sucesso para status true.\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/status/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"status",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "status empity",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 500', function () {\r",
													"    pm.response.to.have.status(500);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error).to.eql(\"CastError: Cast to Boolean failed for value \\\"\\\" (type string) at path \\\"status\\\" because of \\\"CastError\\\"\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"status\":\"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/status/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"status",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "sucess true",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Status do usuario atualizado com sucesso para status true.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"status\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/status/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"status",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "sucess false",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Status do usuario atualizado com sucesso para status false.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"status\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/user/status/{{IDUserAdmin}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"user",
												"status",
												"{{IDUserAdmin}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "API Delete",
					"item": [
						{
							"name": "success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test(\"Check msg\", function () {\r",
											"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Usuário deletado com sucesso!.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"token\": \"{{token}}\",\r\n \"audit\": [\r\n    {\r\n      \"idCompany\": \"Qa-Coders\",\r\n      \"loginUser\": \"Test-0000\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}api/user/{{IDUserAdmin}}",
									"host": [
										"{{url}}api"
									],
									"path": [
										"user",
										"{{IDUserAdmin}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "ID incorrect",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test(\"Check msg\", function () {\r",
											"    pm.expect(JSON.parse(responseBody).alert[0]).to.eql(\"Esse usuário não existe em nossa base de dados.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"token\": \"{{token}}\",\r\n \"audit\": [\r\n    {\r\n      \"idCompany\": \"Qa-Coders\",\r\n      \"loginUser\": \"Test-0000\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}api/user/655e624566263dd8412ca657",
									"host": [
										"{{url}}api"
									],
									"path": [
										"user",
										"655e624566263dd8412ca657"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "in",
						"value": "query",
						"type": "string"
					},
					{
						"key": "value",
						"value": "{{token}}",
						"type": "string"
					},
					{
						"key": "key",
						"value": "token",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Board",
			"item": [
				{
					"name": "API Register",
					"item": [
						{
							"name": "Success",
							"item": [
								{
									"name": "Success",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// FUNÇÃO DE boardName\r",
													"function firstBoard(){\r",
													"    var firstBoard = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\", \"Nexus\", \"Insight\", \"Momentum\", \"Excel\", \"Apex\", \"Nexus\", \"Orbit\", \"Virtue\", \"Zenith\", \"Quantum\", \"Streamline\", \"Vortex\", \"Fusion\", \"Catalyst\", \"Zen\", \"Pulse\", \"Precision\", \"Vertex\", \"Endeavor\", \"Nova\", \"Odyssey\", \"Agile\", \"Infinity\", \"Evolve\", \"Synergy\", \"Solstice\", \"Dynamo\", \"Pinnacle\", \"Echo\", \"Elemental\", \"Spectrum\", \"Summit\", \"Horizon\", \"Genesis\", \"Eclipse\", \"Amplify\", \"catalyst\", \"Momentum\", \"Perspective\", \"Enigma\", \"Reboot\", \"Infinity\", \"Synapse\", \"Nexus\", \"Luminary\", \"Radiant\", \"Flux\", \"Momentum\", \"Legacy\", \"Aurora\", \"Phoenix\", \"Spectrum\", \"Zenith\", \"Velocity\", \"Unity\", \"Visionary\", \"Quantum\", \"Odyssey\", \"Luminate\", \"Fusion\", \"Dynamo\", \"Virtuoso\", \"Nova\", \"Quest\", \"Pulse\", \"Apex\", \"Envision\", \"Horizon\", \"Illuminate\", \"Catalyst\", \"Thrive\", \"Venture\", \"Synergy\", \"Summit\", \"Apex\", \"Genesis\", \"Pinnacle\", \"Fusion\", \"Evolve\", \"Momentum\", \"Zenith\", \"Vortex\", \"Nexus\", \"Quantum\", \"Echo\", \"Phoenix\", \"Spectrum\", \"Radiant\", \"Synergy\", \"Legacy\", \"Evolve\", \"Odyssey\", \"Virtue\", \"Nova\", \"Horizon\", \"Visionary\", \"Catalyst\", \"Genesis\", \"Pulse\", \"Vertex\"];\r",
													"    var randomItem = firstBoard[Math.floor(Math.random() * firstBoard.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"FirstBoard\", firstBoard());\r",
													"\r",
													"function lastBoard(){\r",
													"    var lastBoard = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
													"    var randomItem = lastBoard[Math.floor(Math.random() * lastBoard.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"LastBoard\", lastBoard());\r",
													"\r",
													"pm.environment.set(\"BoardName\", pm.variables.get(\"FirstBoard\") + \" \" + pm.variables.get(\"LastBoard\"));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// salvar ID na variável global\r",
													"pm.globals.set(\"IDboard\", JSON.parse(responseBody).newBoard._id);\r",
													"\r",
													"pm.test('Response status code is Create 201', function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Cadastro realizado com sucesso!\");\r",
													"});\r",
													"\r",
													"pm.test(\"Check boardName\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newBoard.boardName).to.eql(pm.environment.get(\"BoardName\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check boardCode is numeric (even if it's a string)\", function () {\r",
													"    // Obtém o valor do boardCode do JSON retornado\r",
													"    const boardCode = JSON.parse(responseBody).newBoard.boardCode;\r",
													"    // Verifica se o boardCode é numérico, mesmo sendo uma string\r",
													"    pm.expect(!isNaN(boardCode)).to.be.true;\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"boardName\": \"{{BoardName}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/board/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Exception",
							"item": [
								{
									"name": "boardName: numeric",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'diretoria' só pode conter letras e o caractere especial '&'.\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"boardName\": \"Operação 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/board/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "boardName: carctere special",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'diretoria' só pode conter letras e o caractere especial '&'.\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"boardName\": \"Operação @\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/board/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "boardName: > 50 caracteres",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'diretoria' deve possuir no máximo 50 caracteres.\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"boardName\": \"Abcdefghijklmnopqrstuvwxyz Abcdefghijklmnopqrstuvwx\"  // 51 dígitos \r\n}\r\n\r\n/*\r\n\r\n{\r\n    \"boardName\": \"Abcdefghijklmnopqrstuvwxyz Abcdefghijklmnopqrstuvw\" // 50 dígitos\r\n}\r\n\r\n*/\r\n\r\n/*\r\n\r\n{\r\n    \"boardName\": \"Abcdefghijklmnopqrstuvwxyz Abcdefghijklmnopqrstuv\" // 49 dígitos\r\n}\r\n\r\n*/",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/board/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "boardName: empity",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'diretoria' é obrigatório.\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"boardName\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/board/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "boardName: duplicate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 409', function () {\r",
													"    pm.response.to.have.status(409);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).alert[0]).to.eql(\"Não é possível salvar esse registro. Diretoria já cadastrada no sistema.\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"boardName\": \"{{BoardName}}\"\r\n}\r\n\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/board/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												""
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "API List",
					"item": [
						{
							"name": "List Count",
							"item": [
								{
									"name": "New Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Check count is number\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).count).to.be.a('Number')\r",
													"});\r",
													"\r",
													"pm.test(\"Check count is equal or greater than zero\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).count).to.be.at.least(0);\r",
													"});\r",
													"\r",
													"pm.test(\"Check count is present in the response\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property('count');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}api/board/count",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												"count"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "List boardName",
							"item": [
								{
									"name": "New Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"/*\r",
													"pm.test(\"Check if list is not empty\", function() {\r",
													"    pm.expect(boards.length > 0).to.be.true;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Check if list contains boardName\", function () {\r",
													"    pm.response.to.have.body.to.have.property(\"boardName\");\r",
													"});\r",
													"\r",
													"//contem campos diretoria, codigo diretoria, status, status é ativa ou inativa, \r",
													"\r",
													"//ordem alfabética: bug aberto por Andreza\r",
													"\r",
													"*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}api/board/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "List ID",
							"item": [
								{
									"name": "id valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Check id\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).board._id).to.eql(pm.globals.get(\"IDboard\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}api/board/{{IDboard}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												"{{IDboard}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "id invalid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 500', function () {\r",
													"    pm.response.to.have.status(500);\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}api/board/{1234}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												"{1234}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "API Pesquisar",
					"item": [
						{
							"name": "boardName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}api/board/?boardName={{BoardName}}",
									"host": [
										"{{url}}api"
									],
									"path": [
										"board",
										""
									],
									"query": [
										{
											"key": "boardName",
											"value": "{{BoardName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "boardName: one letter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/board/?boardName= a",
									"host": [
										"{{url}}api"
									],
									"path": [
										"board",
										""
									],
									"query": [
										{
											"key": "boardName",
											"value": " a"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "API Edit",
					"item": [
						{
							"name": "Exception",
							"item": [
								{
									"name": "boardName: empity",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'diretoria' é obrigatório.\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"boardName\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/board/{{IDboard}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												"{{IDboard}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "boardName: numeric",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'diretoria' só pode conter letras e o caractere especial '&'.\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"boardName\": \"Teste 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/board/{{IDboard}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												"{{IDboard}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "boardName: caractere special",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'diretoria' só pode conter letras e o caractere especial '&'.\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"boardName\": \"Teste @\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/board/{{IDboard}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												"{{IDboard}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "boardName: >50 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'diretoria' deve possuir no máximo 50 caracteres.\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"boardName\": \"Abcdefghijklmnopqrstuvwxyz Abcdefghijklmnopqrstuvwx\"  // 51 dígitos \r\n}\r\n\r\n/*\r\n\r\n{\r\n    \"boardName\": \"Abcdefghijklmnopqrstuvwxyz Abcdefghijklmnopqrstuvw\" // 50 dígitos\r\n}\r\n\r\n*/\r\n\r\n/*\r\n\r\n{\r\n    \"boardName\": \"Abcdefghijklmnopqrstuvwxyz Abcdefghijklmnopqrstuv\" // 49 dígitos\r\n}\r\n\r\n*/",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/board/{{IDboard}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"board",
												"{{IDboard}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "in",
						"value": "query",
						"type": "string"
					},
					{
						"key": "value",
						"value": "{{token}}",
						"type": "string"
					},
					{
						"key": "key",
						"value": "token",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Company",
			"item": [
				{
					"name": "API Register",
					"item": [
						{
							"name": "Success",
							"item": [
								{
									"name": "Success",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													" // função: \"corporateName\"\r",
													"function firstCorporate(){\r",
													"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\", , \"Nexus\", \"Orbit\", \"Virtue\", \"Zenith\", \"Quantum\", \"Streamline\", \"Vortex\", \"Fusion\", \"Catalyst\", \"Zen\", \"Pulse\", \"Precision\", \"Vertex\", \"Endeavor\", \"Nova\", \"Odyssey\", \"Agile\", \"Infinity\", \"Evolve\", \"Synergy\", \"Solstice\", \"Dynamo\", \"Pinnacle\", \"Echo\", \"Elemental\", \"Spectrum\", \"Summit\", \"Horizon\", \"Genesis\", \"Eclipse\", \"Amplify\", \"catalyst\", \"Momentum\", \"Perspective\", \"Enigma\", \"Reboot\", \"Infinity\", \"Synapse\", \"Nexus\", \"Luminary\", \"Radiant\", \"Flux\", \"Momentum\", \"Legacy\", \"Aurora\", \"Phoenix\", \"Spectrum\", \"Zenith\", \"Velocity\", \"Unity\", \"Visionary\", \"Quantum\", \"Odyssey\", \"Luminate\", \"Fusion\", \"Dynamo\", \"Virtuoso\", \"Nova\", \"Quest\", \"Pulse\", \"Apex\", \"Envision\", \"Horizon\", \"Illuminate\", \"Catalyst\", \"Thrive\", \"Venture\", \"Synergy\", \"Summit\", \"Apex\", \"Genesis\", \"Pinnacle\", \"Fusion\", \"Evolve\", \"Momentum\", \"Zenith\", \"Vortex\", \"Nexus\", \"Quantum\", \"Echo\", \"Phoenix\", \"Spectrum\", \"Radiant\", \"Synergy\", \"Legacy\", \"Evolve\", \"Odyssey\", \"Virtue\", \"Nova\", \"Horizon\", \"Visionary\", \"Catalyst\", \"Genesis\", \"Pulse\", \"Vertex\"];\r",
													"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
													"\r",
													"function lastCorporate(){\r",
													"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
													"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
													"\r",
													"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
													"\r",
													"// -----------------------------------------------------------------------------------\r",
													"\r",
													"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
													"function gerarCNPJ() {\r",
													"    let cnpj = '';\r",
													"\r",
													"    for (let i = 0; i < 14; i++) {\r",
													"        cnpj += Math.floor(Math.random() * 10);\r",
													"    }\r",
													"\r",
													"    return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
													"\r",
													"// ----------------------------------------------------------------------------\r",
													"\r",
													"// Função: \"mail\"\r",
													"\r",
													"function domain(){\r",
													"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
													"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"Domain\", domain());\r",
													"\r",
													"function user(){\r",
													"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
													"    return user;\r",
													"}\r",
													"\r",
													"pm.environment.set(\"User\", user());\r",
													"\r",
													"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
													"\r",
													"\r",
													"// ---------------------------------------------------------------------------------------\r",
													"\r",
													"// função: \"matriz\": razão social\r",
													"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
													"\r",
													"// ---------------------------------------------------------------------------------------\r",
													"\r",
													"// função: \"responsibleContact\"\r",
													"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
													"\r",
													"// ---------------------------------------------------------------------------------------\r",
													"\r",
													"// função \"telephone\"\r",
													"function gerarTelefone() {\r",
													"    // Código de área (dois dígitos)\r",
													"    const codigoPais = 55;\r",
													"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
													"\r",
													"    // Primeiro bloco de números (cinco dígitos)\r",
													"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
													"\r",
													"    // Segundo bloco de números (quatro dígitos)\r",
													"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
													"\r",
													"    // Formatação do número de telefone\r",
													"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
													"\r",
													"    return telefone;\r",
													"}\r",
													"\r",
													"pm.environment.set(\"Telephone\", gerarTelefone());\r",
													"\r",
													"// ---------------------------------------------------------------------------------------\r",
													"\r",
													"// função: \"serviceDescription\"\r",
													"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
													"\r",
													"// ---------------------------------------------------------------------------------------\r",
													"\r",
													"// função: \"zipCode\": CEP\r",
													"function gerarCEP() {\r",
													"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
													"\r",
													"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
													"}\r",
													"\r",
													"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
													"const cepGerado = gerarCEP();\r",
													"\r",
													"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
													"\r",
													"\r",
													"// função: \"city\": \"São Paulo\",\r",
													"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
													"\r",
													"// função: \"state\": \"SP\",\r",
													"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
													"\r",
													"// função: \"district\": \"Rua das Flores\",\r",
													"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
													"\r",
													"// função: \"street\": \"Avenida Interlagos\",\r",
													"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
													"\r",
													"//função: \"number\": \"50\",\r",
													"const numero = Math.floor(Math.random() * 90) + 10;\r",
													"pm.environment.set(\"Number\", numero);\r",
													"\r",
													"// função: \"complement\":\r",
													"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
													"\r",
													"// função: \"country\": \"Brasil\"\r",
													"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
													"  "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// salvar ID na variável global\r",
													"pm.globals.set(\"IDCompany\", JSON.parse(responseBody).newCompany._id);\r",
													"\r",
													"// salvar CorporateName na variável global\r",
													"pm.globals.set(\"corporatename\", JSON.parse(responseBody).newCompany.corporateName);\r",
													"\r",
													"pm.test('Response status code is Create 201', function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"/*\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(`Olá a companhia ${corporateName} foi cadastrada com sucesso.`);\r",
													"});\r",
													"*/\r",
													"\r",
													"pm.test(\"Check CorporateName\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.corporateName).to.eql(pm.environment.get(\"CorporateName\"));\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Check registerCompany\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.registerCompany).to.eql(pm.environment.get(\"RegisterCompany\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check responsibleContact\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.responsibleContact).to.eql(pm.environment.get(\"ResponsibleContact\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check mailCorporate\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.mail).to.eql(pm.environment.get(\"MailCorporate\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check telephone\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.telephone).to.eql(pm.environment.get(\"Telephone\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check if telephone starts with '55' - Brasil\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.telephone.startsWith('55')).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Check serviceDescription\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.serviceDescription).to.eql(pm.environment.get(\"ServiceDescription\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check matriz\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.matriz).to.eql(pm.environment.get(\"Matriz\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check address: country\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].country).to.eql(pm.environment.get(\"Country\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check address: zipCode\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].zipCode).to.eql(pm.environment.get(\"cepBrasileiro\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check address: city\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].city).to.eql(pm.environment.get(\"City\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check address: state\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].state).to.eql(pm.environment.get(\"State\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check address: district\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].district).to.eql(pm.environment.get(\"District\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check address: street\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].street).to.eql(pm.environment.get(\"Street\"));\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Check address: number\", function () {\r",
													"    // Converte o valor retornado do JSON para um número\r",
													"    const addressNumber = parseInt(JSON.parse(responseBody).newCompany.address[0].number, 10);\r",
													"\r",
													"    // Compara o número convertido com o valor da variável de ambiente\r",
													"    pm.expect(addressNumber).to.eql(pm.environment.get(\"Number\"));\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Check address: complement\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].complement).to.eql(pm.environment.get(\"Complement\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/company/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"company",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Exception",
							"item": [
								{
									"name": "corporateName",
									"item": [
										{
											"name": "corporateName empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'Nome da empresa' é obrigatório.\");\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "corporateName >100 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrst\", // 101 digits\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "registerCompany",
									"item": [
										{
											"name": "registerCompany empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'CNPJ' da empresa é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "registerCompany: letters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"123a456b\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "registerCompany >14 caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"123456789012345\", // 15 digits\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "registerCompany: especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"123.456.789012\", \r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "matriz",
									"item": [
										{
											"name": "matriz empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'Razão Social' da empresa é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "matriz >100 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrst\", // 101 digits\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "responsibleContact",
									"item": [
										{
											"name": "responsibleContact empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"/*\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'Contato do Responsável' é obrigatório.\");\r",
															"});\r",
															"*/\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "responsibleContact > 100 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrst\", // 101 digits\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "telephone",
									"item": [
										{
											"name": "telephone: empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'Telefone' é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "telephone: especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"5515-99999999\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "telephone: letters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"5515a99999999\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "mail",
									"item": [
										{
											"name": "mail empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'Email' é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "serviceDescription",
									"item": [
										{
											"name": "serviceDescription empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'Descrição' é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "street",
									"item": [
										{
											"name": "street empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'logradouro' é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "street: especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"teste @\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "number",
									"item": [
										{
											"name": "number empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'número' é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "number: especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"123@\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "number >10 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"12345678901\", //11 digits\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "complement",
									"item": [
										{
											"name": "complement empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 201', function () {\r",
															"    pm.response.to.have.status(201);\r",
															"})\r",
															"\r",
															"/*\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).msg).to.eql(`Olá a companhia ${CorporateName} foi cadastrada com sucesso.`);\r",
															"});\r",
															"\r",
															"*/"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "complement: especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"Teste do @\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "complement >80 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 0123456789 0123456789 ªºªºª\",//81 digits\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "district",
									"item": [
										{
											"name": "district empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'bairro' é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "district: especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"Testde do @\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "district >50 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWX\", //51 DIGITS\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "city",
									"item": [
										{
											"name": "city empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'cidade' é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "city: especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"Testde do @\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "city >50 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWX\", //51 DIGITS\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "city:numbers Copy",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"Testde do 1\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "state",
									"item": [
										{
											"name": "state empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'estado' é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "state : especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"T@\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "state : numbers",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"T1\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "state >2 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"spp\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "country",
									"item": [
										{
											"name": "country empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo País é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "country >50 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWX\" //51 DIGITS\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "zipCode",
									"item": [
										{
											"name": "zipCode empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'CEP' é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "zipCode especial caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"1234567@\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "zipCode: letters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"1234567a\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "zipCode >8 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" // função: \"corporateName\"\r",
															"function firstCorporate(){\r",
															"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
															"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
															"\r",
															"function lastCorporate(){\r",
															"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
															"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
															"\r",
															"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
															"\r",
															"// -----------------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
															"function gerarCNPJ() {\r",
															"    let cnpj = '';\r",
															"\r",
															"    for (let i = 0; i < 14; i++) {\r",
															"        cnpj += Math.floor(Math.random() * 10);\r",
															"    }\r",
															"\r",
															"    return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
															"\r",
															"// ----------------------------------------------------------------------------\r",
															"\r",
															"// Função: \"mail\"\r",
															"\r",
															"function domain(){\r",
															"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
															"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
															"    return randomItem;\r",
															"}\r",
															"pm.environment.set(\"Domain\", domain());\r",
															"\r",
															"function user(){\r",
															"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
															"    return user;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"User\", user());\r",
															"\r",
															"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
															"\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"matriz\": razão social\r",
															"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"responsibleContact\"\r",
															"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função \"telephone\"\r",
															"function gerarTelefone() {\r",
															"    // Código de área (dois dígitos)\r",
															"    const codigoPais = 55;\r",
															"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
															"\r",
															"    // Primeiro bloco de números (cinco dígitos)\r",
															"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
															"\r",
															"    // Segundo bloco de números (quatro dígitos)\r",
															"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
															"\r",
															"    // Formatação do número de telefone\r",
															"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
															"\r",
															"    return telefone;\r",
															"}\r",
															"\r",
															"pm.environment.set(\"Telephone\", gerarTelefone());\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"serviceDescription\"\r",
															"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
															"\r",
															"// ---------------------------------------------------------------------------------------\r",
															"\r",
															"// função: \"zipCode\": CEP\r",
															"function gerarCEP() {\r",
															"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
															"\r",
															"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
															"}\r",
															"\r",
															"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
															"const cepGerado = gerarCEP();\r",
															"\r",
															"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
															"\r",
															"\r",
															"// função: \"city\": \"São Paulo\",\r",
															"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
															"\r",
															"// função: \"state\": \"SP\",\r",
															"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
															"\r",
															"// função: \"district\": \"Rua das Flores\",\r",
															"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"// função: \"street\": \"Avenida Interlagos\",\r",
															"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
															"\r",
															"//função: \"number\": \"50\",\r",
															"const numero = Math.floor(Math.random() * 90) + 10;\r",
															"pm.environment.set(\"Number\", numero);\r",
															"\r",
															"// função: \"complement\":\r",
															"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
															"\r",
															"// função: \"country\": \"Brasil\"\r",
															"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
															"  "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"123456780\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														""
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "API Edit Company - id",
					"item": [
						{
							"name": "Success",
							"item": [
								{
									"name": "Success",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													" // função: \"corporateName\"\r",
													"function firstCorporate(){\r",
													"    var firstCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\", , \"Nexus\", \"Orbit\", \"Virtue\", \"Zenith\", \"Quantum\", \"Streamline\", \"Vortex\", \"Fusion\", \"Catalyst\", \"Zen\", \"Pulse\", \"Precision\", \"Vertex\", \"Endeavor\", \"Nova\", \"Odyssey\", \"Agile\", \"Infinity\", \"Evolve\", \"Synergy\", \"Solstice\", \"Dynamo\", \"Pinnacle\", \"Echo\", \"Elemental\", \"Spectrum\", \"Summit\", \"Horizon\", \"Genesis\", \"Eclipse\", \"Amplify\", \"catalyst\", \"Momentum\", \"Perspective\", \"Enigma\", \"Reboot\", \"Infinity\", \"Synapse\", \"Nexus\", \"Luminary\", \"Radiant\", \"Flux\", \"Momentum\", \"Legacy\", \"Aurora\", \"Phoenix\", \"Spectrum\", \"Zenith\", \"Velocity\", \"Unity\", \"Visionary\", \"Quantum\", \"Odyssey\", \"Luminate\", \"Fusion\", \"Dynamo\", \"Virtuoso\", \"Nova\", \"Quest\", \"Pulse\", \"Apex\", \"Envision\", \"Horizon\", \"Illuminate\", \"Catalyst\", \"Thrive\", \"Venture\", \"Synergy\", \"Summit\", \"Apex\", \"Genesis\", \"Pinnacle\", \"Fusion\", \"Evolve\", \"Momentum\", \"Zenith\", \"Vortex\", \"Nexus\", \"Quantum\", \"Echo\", \"Phoenix\", \"Spectrum\", \"Radiant\", \"Synergy\", \"Legacy\", \"Evolve\", \"Odyssey\", \"Virtue\", \"Nova\", \"Horizon\", \"Visionary\", \"Catalyst\", \"Genesis\", \"Pulse\", \"Vertex\"];\r",
													"    var randomItem = firstCorporate[Math.floor(Math.random() * firstCorporate.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"FirstCorporate\", firstCorporate());\r",
													"\r",
													"function lastCorporate(){\r",
													"    var lastCorporate = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\",\"&\"];\r",
													"    var randomItem = lastCorporate[Math.floor(Math.random() * lastCorporate.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"LastCorporate\", lastCorporate());\r",
													"\r",
													"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporate\") + \" \" + pm.variables.get(\"LastCorporate\"));\r",
													"\r",
													"// -----------------------------------------------------------------------------------\r",
													"\r",
													"// Função: \"registerCompany\": CNPJ 14 dígitos\r",
													"function gerarCNPJ() {\r",
													"    let cnpj = '';\r",
													"\r",
													"    for (let i = 0; i < 14; i++) {\r",
													"        cnpj += Math.floor(Math.random() * 10);\r",
													"    }\r",
													"\r",
													"    return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", gerarCNPJ());\r",
													"\r",
													"// ----------------------------------------------------------------------------\r",
													"\r",
													"// Função: \"mail\"\r",
													"\r",
													"function domain(){\r",
													"    var domain = [\"@gmail.com\",\"@gmail.com.br\", \"@hotmail.com\", \"@hotmail.com.br\", \"@yahoo.com\",\"@yahoo.com.br\"];\r",
													"    var randomItem = domain[Math.floor(Math.random() * domain.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"Domain\", domain());\r",
													"\r",
													"function user(){\r",
													"    var user = pm.variables.get(\"CorporateName\").toLowerCase().replace(/\\s/g,\"\").normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")\r",
													"    return user;\r",
													"}\r",
													"\r",
													"pm.environment.set(\"User\", user());\r",
													"\r",
													"pm.environment.set(\"MailCorporate\", pm.variables.get(\"User\") + pm.variables.get(\"Domain\"));\r",
													"\r",
													"\r",
													"// ---------------------------------------------------------------------------------------\r",
													"\r",
													"// função: \"matriz\": razão social\r",
													"pm.environment.set(\"Matriz\", pm.variables.replaceIn('{{$randomDepartment}}'));\r",
													"\r",
													"// ---------------------------------------------------------------------------------------\r",
													"\r",
													"// função: \"responsibleContact\"\r",
													"pm.environment.set(\"ResponsibleContact\", pm.variables.replaceIn('{{$randomFullName}}'));\r",
													"\r",
													"// ---------------------------------------------------------------------------------------\r",
													"\r",
													"// função \"telephone\"\r",
													"function gerarTelefone() {\r",
													"    // Código de área (dois dígitos)\r",
													"    const codigoPais = 55;\r",
													"    const codigoArea = Math.floor(Math.random() * 100).toString().padStart(2, '0');\r",
													"\r",
													"    // Primeiro bloco de números (cinco dígitos)\r",
													"    const bloco1 = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\r",
													"\r",
													"    // Segundo bloco de números (quatro dígitos)\r",
													"    const bloco2 = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r",
													"\r",
													"    // Formatação do número de telefone\r",
													"    const telefone = `${codigoPais}${codigoArea}${bloco1}${bloco2}`;\r",
													"\r",
													"    return telefone;\r",
													"}\r",
													"\r",
													"pm.environment.set(\"Telephone\", gerarTelefone());\r",
													"\r",
													"// ---------------------------------------------------------------------------------------\r",
													"\r",
													"// função: \"serviceDescription\"\r",
													"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomPhrase}}'));\r",
													"\r",
													"// ---------------------------------------------------------------------------------------\r",
													"\r",
													"// função: \"zipCode\": CEP\r",
													"function gerarCEP() {\r",
													"    const parteNumerica = Math.floor(Math.random() * 90000000) + 10000000; // Gera a parte numérica\r",
													"\r",
													"    return `${parteNumerica.toString().substring(0, 5)}${parteNumerica.toString().substring(5)}`; // Formata o CEP\r",
													"}\r",
													"\r",
													"// Chama a função e define o CEP gerado como uma variável de ambiente\r",
													"const cepGerado = gerarCEP();\r",
													"\r",
													"pm.environment.set(\"cepBrasileiro\", cepGerado);\r",
													"\r",
													"\r",
													"// função: \"city\": \"São Paulo\",\r",
													"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
													"\r",
													"// função: \"state\": \"SP\",\r",
													"pm.environment.set(\"State\", pm.variables.replaceIn('{{$randomCountryCode}}'));\r",
													"\r",
													"// função: \"district\": \"Rua das Flores\",\r",
													"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
													"\r",
													"// função: \"street\": \"Avenida Interlagos\",\r",
													"pm.environment.set(\"Street\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
													"\r",
													"//função: \"number\": \"50\",\r",
													"const numero = Math.floor(Math.random() * 90) + 10;\r",
													"pm.environment.set(\"Number\", numero);\r",
													"\r",
													"// função: \"complement\":\r",
													"pm.environment.set(\"Complement\", pm.variables.replaceIn('{{$randomStreetAddress}}'));\r",
													"\r",
													"// função: \"country\": \"Brasil\"\r",
													"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
													"  "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// salvar ID na variável global\r",
													"pm.globals.set(\"IDCompany\", JSON.parse(responseBody).newCompany._id);\r",
													"\r",
													"// salvar CorporateName na variável global\r",
													"pm.globals.set(\"corporatename\", JSON.parse(responseBody).newCompany.corporateName);\r",
													"\r",
													"pm.test('Response status code is Create 201', function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"/*\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(`Olá a companhia ${corporateName} foi cadastrada com sucesso.`);\r",
													"});\r",
													"*/\r",
													"\r",
													"pm.test(\"Check CorporateName\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.corporateName).to.eql(pm.environment.get(\"CorporateName\"));\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Check registerCompany\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.registerCompany).to.eql(pm.environment.get(\"RegisterCompany\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check responsibleContact\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.responsibleContact).to.eql(pm.environment.get(\"ResponsibleContact\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check mailCorporate\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.mail).to.eql(pm.environment.get(\"MailCorporate\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check telephone\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.telephone).to.eql(pm.environment.get(\"Telephone\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check if telephone starts with '55' - Brasil\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.telephone.startsWith('55')).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Check serviceDescription\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.serviceDescription).to.eql(pm.environment.get(\"ServiceDescription\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check matriz\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.matriz).to.eql(pm.environment.get(\"Matriz\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check address: country\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].country).to.eql(pm.environment.get(\"Country\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check address: zipCode\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].zipCode).to.eql(pm.environment.get(\"cepBrasileiro\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check address: city\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].city).to.eql(pm.environment.get(\"City\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check address: state\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].state).to.eql(pm.environment.get(\"State\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check address: district\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].district).to.eql(pm.environment.get(\"District\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check address: street\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].street).to.eql(pm.environment.get(\"Street\"));\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Check address: number\", function () {\r",
													"    // Converte o valor retornado do JSON para um número\r",
													"    const addressNumber = parseInt(JSON.parse(responseBody).newCompany.address[0].number, 10);\r",
													"\r",
													"    // Compara o número convertido com o valor da variável de ambiente\r",
													"    pm.expect(addressNumber).to.eql(pm.environment.get(\"Number\"));\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Check address: complement\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCompany.address[0].complement).to.eql(pm.environment.get(\"Complement\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/company/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"company",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Success",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/*\r",
													"pm.test('Response status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"*/\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Companhia atualizada com sucesso.\");\r",
													"});\r",
													"\r",
													"pm.test(\"Check CorporateName\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).updatedCompany.corporateName).to.eql(pm.environment.get(\"CorporateName\"));\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Check registerCompany\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).updatedCompany.registerCompany).to.eql(pm.environment.get(\"RegisterCompany\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check responsibleContact\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).updatedCompany.responsibleContact).to.eql(pm.environment.get(\"ResponsibleContact\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check mailCorporate\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).updatedCompany.mail).to.eql(pm.environment.get(\"MailCorporate\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check telephone\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).updatedCompany.telephone).to.eql(pm.environment.get(\"Telephone\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check serviceDescription\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).updatedCompany.serviceDescription).to.eql(pm.environment.get(\"ServiceDescription\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Check matriz\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).updatedCompany.matriz).to.eql(pm.environment.get(\"Matriz\"));\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{MailCorporate}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/company/{{IDCompany}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"company",
												"{{IDCompany}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "API Edit address company",
					"item": [
						{
							"name": "Success",
							"item": [
								{
									"name": "Success",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/*\r",
													"pm.test('Response status code is Create 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"*/\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Endereço da companhia atualizado com sucesso.\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/company/address/{{IDCompany}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"company",
												"address",
												"{{IDCompany}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Exception",
							"item": [
								{
									"name": "Street",
									"item": [
										{
											"name": "street empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'logradouro' é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "street: especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"address\": [\r\n        {\r\n            \"zipCode\": \"{{cepBrasileiro}}\",\r\n            \"city\": \"{{City}}\",\r\n            \"state\": \"{{State}}\",\r\n            \"district\": \"{{District}}\",\r\n            \"street\": \"teste @\",\r\n            \"number\": \"{{Number}}\",\r\n            \"complement\": \"{{Complement}}\",\r\n            \"country\": \"{{Country}}\"\r\n        }\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Number",
									"item": [
										{
											"name": "number empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"pm.test(\"Check msg\", function () {\r",
															"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'número' é obrigatório.\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "number: especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"123@\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "number >10 digits Copy",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"address\": [\r\n        {\r\n            \"zipCode\": \"{{cepBrasileiro}}\",\r\n            \"city\": \"{{City}}\",\r\n            \"state\": \"{{State}}\",\r\n            \"district\": \"{{District}}\",\r\n            \"street\": \"{{Street}}\",\r\n            \"number\": \"12345678901\", //11 digits\r\n            \"complement\": \"{{Complement}}\",\r\n            \"country\": \"{{Country}}\"\r\n        }\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "complemen",
									"item": [
										{
											"name": "complement empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 201', function () {\r",
															"    pm.response.to.have.status(201);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "complement: especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"Teste do @\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "complement >80 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 0123456789 0123456789 ªºªºª\",//81 digits\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "district",
									"item": [
										{
											"name": "district empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "district: especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"Testde do @\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "district >50 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWX\", //51 DIGITS\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "city",
									"item": [
										{
											"name": "city empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "city: especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"Testde do @\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "city >50 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWX\", //51 DIGITS\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "city:numbers",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"Testde do 1\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "state",
									"item": [
										{
											"name": "state empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "state : especial caractere",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"T@\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "state : numbers",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"T1\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "state >2 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"spp\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "country",
									"item": [
										{
											"name": "country empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "country >50 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{cepBrasileiro}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWX\" //51 DIGITS\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "zipCode",
									"item": [
										{
											"name": "zipCode empity",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "zipCode especial caracteres",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"1234567@\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "zipCode: letters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															" "
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"1234567a\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "zipCode >8 digits",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Response status code is 400', function () {\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"123456780\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{Street}}\",\r\n      \"number\": \"{{Number}}\",\r\n      \"complement\": \"{{Complement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}api/company/address/{{IDCompany}}",
													"host": [
														"{{url}}api"
													],
													"path": [
														"company",
														"address",
														"{{IDCompany}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "API List",
					"item": [
						{
							"name": "list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is Create 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test(\"Ordem alfabética\", function () {\r",
											"    pm.expect();\r",
											"});\r",
											"\r",
											"pm.test(\"Contém campo nome\", function () {\r",
											"    pm.expect();\r",
											"});\r",
											"\r",
											"pm.test(\"Contém campo CNPJ\", function () {\r",
											"    pm.expect();\r",
											"});\r",
											"\r",
											"pm.test(\"Contém campo responsável\", function () {\r",
											"    pm.expect();\r",
											"});\r",
											"\r",
											"pm.test(\"Contém campo email\", function () {\r",
											"    pm.expect();\r",
											"});\r",
											"\r",
											"pm.test(\"Contém campo telefone\", function () {\r",
											"    pm.expect();\r",
											"});\r",
											"\r",
											"pm.test(\"Contém campo cidade\", function () {\r",
											"    pm.expect();\r",
											"});\r",
											"\r",
											"pm.test(\"Contém campo estado\", function () {\r",
											"    pm.expect();\r",
											"});\r",
											"\r",
											"pm.test(\"Contém campo país\", function () {\r",
											"    pm.expect();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/company/",
									"host": [
										"{{url}}api"
									],
									"path": [
										"company",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "list by corporateName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is Create 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/company/?corporateName=teste",
									"host": [
										"{{url}}api"
									],
									"path": [
										"company",
										""
									],
									"query": [
										{
											"key": "corporateName",
											"value": "teste"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "list by city",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is Create 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/company/?city=teste",
									"host": [
										"{{url}}api"
									],
									"path": [
										"company",
										""
									],
									"query": [
										{
											"key": "city",
											"value": "teste"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "list by country",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is Create 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/company/?country=teste",
									"host": [
										"{{url}}api"
									],
									"path": [
										"company",
										""
									],
									"query": [
										{
											"key": "country",
											"value": "teste"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "list by state",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is Create 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/company/?state=teste",
									"host": [
										"{{url}}api"
									],
									"path": [
										"company",
										""
									],
									"query": [
										{
											"key": "state",
											"value": "teste"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "list count",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is Create 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test(\"Check count is number\", function () {\r",
											"    pm.expect(JSON.parse(responseBody).count).to.be.a('Number')\r",
											"});\r",
											"\r",
											"pm.test(\"Check count is equal or greater than zero\", function () {\r",
											"    pm.expect(JSON.parse(responseBody).count).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Check count is present in the response\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('count');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/company/count",
									"host": [
										"{{url}}api"
									],
									"path": [
										"company",
										"count"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "API update status",
					"item": [
						{
							"name": "status false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"*/\r",
											"pm.test('Check status is False', function () {\r",
											"     pm.expect(JSON.parse(responseBody).updateCompany.status).to.eql(false);\r",
											"})\r",
											"\r",
											"pm.test('Check msg', function () {\r",
											"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Status da companhia atualizado com sucesso.\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/company/status/{{IDCompany}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										"status",
										"{{IDCompany}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "status true",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"*/\r",
											"pm.test('Status is True', function () {\r",
											"     pm.expect(JSON.parse(responseBody).updateCompany.status).to.eql(true);\r",
											"})\r",
											"\r",
											"pm.test('Mensagem', function () {\r",
											"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Status da companhia atualizado com sucesso.\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/company/status/{{IDCompany}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										"status",
										"{{IDCompany}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "id incorrect",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 500', function () {\r",
											"    pm.response.to.have.status(500);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/company/status/123",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										"status",
										"123"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "API surch by id",
					"item": [
						{
							"name": "success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/company/{{IDCompany}}",
									"host": [
										"{{url}}api"
									],
									"path": [
										"company",
										"{{IDCompany}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "id incorrect",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 500', function () {\r",
											"    pm.response.to.have.status(500);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/company/123",
									"host": [
										"{{url}}api"
									],
									"path": [
										"company",
										"123"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "API Delete",
					"item": [
						{
							"name": "Success",
							"item": [
								{
									"name": "success",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test('Check msg', function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Companhia deletado com sucesso.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}api/company/{{IDCompany}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"company",
												"{{IDCompany}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "already deleted",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 404', function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test('Check msg', function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Essa companhia não existem em nossa base de dados.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}api/company/{{IDCompany}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"company",
												"{{IDCompany}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "id incorrect",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 500', function () {\r",
													"    pm.response.to.have.status(500);\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}api/company/{123}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"company",
												"{123}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "in",
						"value": "query",
						"type": "string"
					},
					{
						"key": "value",
						"value": "{{token}}",
						"type": "string"
					},
					{
						"key": "key",
						"value": "token",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "CostCenter",
			"item": [
				{
					"name": "API Register",
					"item": [
						{
							"name": "Success",
							"item": [
								{
									"name": "Success",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function costName(){\r",
													"    var costName = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\", , \"Nexus\", \"Orbit\", \"Virtue\", \"Zenith\", \"Quantum\", \"Streamline\", \"Vortex\", \"Fusion\", \"Catalyst\", \"Zen\", \"Pulse\", \"Precision\", \"Vertex\", \"Endeavor\", \"Nova\", \"Odyssey\", \"Agile\", \"Infinity\", \"Evolve\", \"Synergy\", \"Solstice\", \"Dynamo\", \"Pinnacle\", \"Echo\", \"Elemental\", \"Spectrum\", \"Summit\", \"Horizon\", \"Genesis\", \"Eclipse\", \"Amplify\", \"catalyst\", \"Momentum\", \"Perspective\", \"Enigma\", \"Reboot\", \"Infinity\", \"Synapse\", \"Nexus\", \"Luminary\", \"Radiant\", \"Flux\", \"Momentum\", \"Legacy\", \"Aurora\", \"Phoenix\", \"Spectrum\", \"Zenith\", \"Velocity\", \"Unity\", \"Visionary\", \"Quantum\", \"Odyssey\", \"Luminate\", \"Fusion\", \"Dynamo\", \"Virtuoso\", \"Nova\", \"Quest\", \"Pulse\", \"Apex\", \"Envision\", \"Horizon\", \"Illuminate\", \"Catalyst\", \"Thrive\", \"Venture\", \"Synergy\", \"Summit\", \"Apex\", \"Genesis\", \"Pinnacle\", \"Fusion\", \"Evolve\", \"Momentum\", \"Zenith\", \"Vortex\", \"Nexus\", \"Quantum\", \"Echo\", \"Phoenix\", \"Spectrum\", \"Radiant\", \"Synergy\", \"Legacy\", \"Evolve\", \"Odyssey\", \"Virtue\", \"Nova\", \"Horizon\", \"Visionary\", \"Catalyst\", \"Genesis\", \"Pulse\", \"Vertex\"];\r",
													"    var randomItem = costName[Math.floor(Math.random() * costName.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"CostName\", costName());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// salvar ID na variável global\r",
													"pm.globals.set(\"IDcostCenter\", JSON.parse(responseBody).newCostCenter._id);\r",
													"\r",
													"// salvar costCenterName na variável global\r",
													"pm.globals.set(\"CostCenterName\", JSON.parse(responseBody).newCostCenter.costCenterName);\r",
													"\r",
													"pm.test('Response status code is Create 201', function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Cadastro realizado com sucesso.\");\r",
													"});\r",
													"\r",
													"pm.test(\"Check costCenterCode exists\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).newCostCenter.costCenterCode).exist;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"costCenterName\": \"{{CostName}}\",\r\n  \"boardId\": \"{{IDboard}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/costCenter/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"costCenter",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Exception",
							"item": [
								{
									"name": "costCenter: null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function costName(){\r",
													"    var costName = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
													"    var randomItem = costName[Math.floor(Math.random() * costName.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"CostName\", costName());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'centro de custos' é obrigatório.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"costCenterName\": \"\",\r\n  \"boardId\": \"{{IDboard}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/costCenter/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"costCenter",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "costCenter: caractere invalid",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function costName(){\r",
													"    var costName = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
													"    var randomItem = costName[Math.floor(Math.random() * costName.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"CostName\", costName());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'centro de custos' só pode conter letras e o caractere especial '&'.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"costCenterName\": \"Teste@\",\r\n  \"boardId\": \"{{IDboard}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/costCenter/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"costCenter",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "costCenter: 51 digits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function costName(){\r",
													"    var costName = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
													"    var randomItem = costName[Math.floor(Math.random() * costName.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"CostName\", costName());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'centro de custos' deve possuir no máximo 50 caracteres.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"costCenterName\": \"Abcdefghijklmnopqrstuvwxyz Aacdefghijklmnopqrstuvwx\", //51 letras\r\n  \"boardId\": \"{{IDboard}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/costCenter/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"costCenter",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "costCenter: duplicate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function costName(){\r",
													"    var costName = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
													"    var randomItem = costName[Math.floor(Math.random() * costName.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"CostName\", costName());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 409', function () {\r",
													"    pm.response.to.have.status(409);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).alert[0]).to.eql(\"Não é possível salvar esse registro. Centro de custos já cadastrado no sistema.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"costCenterName\": \"Teste\",\r\n  \"boardId\": \"{{IDboard}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/costCenter/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"costCenter",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "boardId: null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function costName(){\r",
													"    var costName = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
													"    var randomItem = costName[Math.floor(Math.random() * costName.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"CostName\", costName());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'ID da diretoria' é obrigatório.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"costCenterName\": \"{{CostName}}\",\r\n  \"boardId\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/costCenter/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"costCenter",
												""
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "API Edit",
					"item": [
						{
							"name": "Exception",
							"item": [
								{
									"name": "costCenter: null",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'centro de custos' é obrigatório.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"costCenterName\": \"\",\r\n  \"boardId\": \"{{IDboard}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/costCenter/{{IDcostCenter}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"costCenter",
												"{{IDcostCenter}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "costCenter: invalid caractere",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'centro de custos' só pode conter letras e o caractere especial '&'.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"costCenterName\": \"Teste*\",\r\n  \"boardId\": \"{{IDboard}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/costCenter/{{IDcostCenter}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"costCenter",
												"{{IDcostCenter}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "costCenter: 51 digits",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'centro de custos' deve possuir no máximo 50 caracteres.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"costCenterName\": \"Aaaacdefghijklmnopqrstuvwxyz Aacdefghijklmnopqrstuv\", //51 letras\r\n  \"boardId\": \"{{IDboard}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/costCenter/{{IDcostCenter}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"costCenter",
												"{{IDcostCenter}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "costCenter: duplicate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 409', function () {\r",
													"    pm.response.to.have.status(409);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).alert[0]).to.eql(\"Não é possível salvar esse registro. Centro de custos já cadastrado no sistema.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"costCenterName\": \"Teste\",\r\n  \"boardId\": \"{{IDboard}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/costCenter/{{IDcostCenter}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"costCenter",
												"{{IDcostCenter}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "boardID: null",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'ID da diretoria' é obrigatório.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"costCenterName\": \"{{CostCenterName}}\",\r\n  \"boardId\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/costCenter/{{IDcostCenter}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"costCenter",
												"{{IDcostCenter}}"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"auth": {
						"type": "apikey",
						"apikey": [
							{
								"key": "in",
								"value": "query",
								"type": "string"
							},
							{
								"key": "value",
								"value": "{{token}}",
								"type": "string"
							},
							{
								"key": "key",
								"value": "token",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "API Edit Satus",
					"item": [
						{
							"name": "Success",
							"item": [
								{
									"name": "success false",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 202', function () {\r",
													"    pm.response.to.have.status(202);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Centro de custos inativado com sucesso!\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"status\": false\r\n}"
										},
										"url": {
											"raw": "{{url}}api/costCenter/status/{{IDcostCenter}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"costCenter",
												"status",
												"{{IDcostCenter}}"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"auth": {
						"type": "apikey",
						"apikey": [
							{
								"key": "in",
								"value": "query",
								"type": "string"
							},
							{
								"key": "value",
								"value": "{{token}}",
								"type": "string"
							},
							{
								"key": "key",
								"value": "token",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "API List",
					"item": [
						{
							"name": "list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test(\"Check if response is a list\", function () {\r",
											"    var responseList = pm.response.json();\r",
											"    pm.expect(responseList).to.be.an('array');\r",
											"});\r",
											"\r",
											"// teste para verificar se contém campo Status\r",
											"let listaResponse = pm.response.json();\r",
											"\r",
											"function hasStatus(array) {\r",
											"    return array.some(item => item.hasOwnProperty('status'));\r",
											"}\r",
											"\r",
											"function hascostCenterName(array) {\r",
											"    return array.some(item => item.hasOwnProperty('costCenterName'));\r",
											"}\r",
											"\r",
											"tests[\"Check if list contains Status\"] = hasStatus(listaResponse);\r",
											"tests[\"Check if list contains costCenterName\"] = hascostCenterName(listaResponse);\r",
											"\r",
											"// teste para verificar se contém True e False\r",
											"let listaResposta = pm.response.json();\r",
											"\r",
											"function hasTrueAndFalse(array) {\r",
											"    const statuses = array.map(item => item.status);\r",
											"    return statuses.includes(true) || statuses.includes(false);\r",
											"}\r",
											"\r",
											"tests[\"Contains True and/or False\"] = hasTrueAndFalse(listaResposta);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/costCenter/",
									"host": [
										"{{url}}api"
									],
									"path": [
										"costCenter",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "count",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is Create 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test(\"Check count is number\", function () {\r",
											"    pm.expect(JSON.parse(responseBody).count).to.be.a('Number')\r",
											"});\r",
											"\r",
											"pm.test(\"Check count is equal or greater than zero\", function () {\r",
											"    pm.expect(JSON.parse(responseBody).count).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Check count is present in the response\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('count');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/costCenter/count",
									"host": [
										"{{url}}api"
									],
									"path": [
										"costCenter",
										"count"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "apikey",
						"apikey": [
							{
								"key": "in",
								"value": "query",
								"type": "string"
							},
							{
								"key": "value",
								"value": "{{token}}",
								"type": "string"
							},
							{
								"key": "key",
								"value": "token",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "API Surch",
					"item": [
						{
							"name": "success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"// melhorar teste\r",
											"/*\r",
											"pm.test(\"Check ID surch is equal to ID response\", function () {\r",
											"    pm.expect(JSON.parse(responseBody)costCenter._id).to.eql(\"{{IDcostCenter}}\");\r",
											"});\r",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/costCenter/{{IDcostCenter}}",
									"host": [
										"{{url}}api"
									],
									"path": [
										"costCenter",
										"{{IDcostCenter}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "id incorrect",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 500', function () {\r",
											"    pm.response.to.have.status(500);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/costCenter/id",
									"host": [
										"{{url}}api"
									],
									"path": [
										"costCenter",
										"id"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "in",
						"value": "query",
						"type": "string"
					},
					{
						"key": "value",
						"value": "{{token}}",
						"type": "string"
					},
					{
						"key": "key",
						"value": "token",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Departament",
			"item": [
				{
					"name": "API Register",
					"item": [
						{
							"name": "Success",
							"item": [
								{
									"name": "success Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function nameDepartment(){\r",
													"    var nameDepartment = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\", , \"Nexus\", \"Orbit\", \"Virtue\", \"Zenith\", \"Quantum\", \"Streamline\", \"Vortex\", \"Fusion\", \"Catalyst\", \"Zen\", \"Pulse\", \"Precision\", \"Vertex\", \"Endeavor\", \"Nova\", \"Odyssey\", \"Agile\", \"Infinity\", \"Evolve\", \"Synergy\", \"Solstice\", \"Dynamo\", \"Pinnacle\", \"Echo\", \"Elemental\", \"Spectrum\", \"Summit\", \"Horizon\", \"Genesis\", \"Eclipse\", \"Amplify\", \"catalyst\", \"Momentum\", \"Perspective\", \"Enigma\", \"Reboot\", \"Infinity\", \"Synapse\", \"Nexus\", \"Luminary\", \"Radiant\", \"Flux\", \"Momentum\", \"Legacy\", \"Aurora\", \"Phoenix\", \"Spectrum\", \"Zenith\", \"Velocity\", \"Unity\", \"Visionary\", \"Quantum\", \"Odyssey\", \"Luminate\", \"Fusion\", \"Dynamo\", \"Virtuoso\", \"Nova\", \"Quest\", \"Pulse\", \"Apex\", \"Envision\", \"Horizon\", \"Illuminate\", \"Catalyst\", \"Thrive\", \"Venture\", \"Synergy\", \"Summit\", \"Apex\", \"Genesis\", \"Pinnacle\", \"Fusion\", \"Evolve\", \"Momentum\", \"Zenith\", \"Vortex\", \"Nexus\", \"Quantum\", \"Echo\", \"Phoenix\", \"Spectrum\", \"Radiant\", \"Synergy\", \"Legacy\", \"Evolve\", \"Odyssey\", \"Virtue\", \"Nova\", \"Horizon\", \"Visionary\", \"Catalyst\", \"Genesis\", \"Pulse\", \"Vertex\"];\r",
													"    var randomItem = nameDepartment[Math.floor(Math.random() * nameDepartment.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"NameDepartment\", nameDepartment());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// salvar ID na variável global\r",
													"pm.globals.set(\"IDdepartment\", JSON.parse(responseBody).newDepartment._id);\r",
													"\r",
													"pm.test('Response status code is Create 201', function () {\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Cadastro realizado com sucesso.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"departmentName\": \"{{NameDepartment}}\",\r\n    \"costCenterId\": \"{{IDcostCenter}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/department/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"department",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Exception",
							"item": [
								{
									"name": "departmentName: null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function nameDepartment(){\r",
													"    var nameDepartment = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
													"    var randomItem = nameDepartment[Math.floor(Math.random() * nameDepartment.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"NameDepartment\", nameDepartment());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'diretoria' é obrigatório.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"departmentName\": \"\",\r\n    \"costCenterId\": \"{{IDcostCenter}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/department/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"department",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "departmentName: caractere invalid",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function nameDepartment(){\r",
													"    var nameDepartment = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
													"    var randomItem = nameDepartment[Math.floor(Math.random() * nameDepartment.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"NameDepartment\", nameDepartment());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'diretoria' só pode conter letras e o caractere especial '&'.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"departmentName\": \"Teste @\",\r\n    \"costCenterId\": \"{{IDcostCenter}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/department/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"department",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "departmentName: 51 digits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function nameDepartment(){\r",
													"    var nameDepartment = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
													"    var randomItem = nameDepartment[Math.floor(Math.random() * nameDepartment.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"NameDepartment\", nameDepartment());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'diretoria' deve possuir no máximo 50 caracteres.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"departmentName\": \"Abbccefghijklmnopqrstuvwxyz Abcdefghijklmnopqrstuvw\", //51 letras\r\n    \"costCenterId\": \"{{IDcostCenter}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/department/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"department",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "departmentName: duplicated",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function nameDepartment(){\r",
													"    var nameDepartment = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
													"    var randomItem = nameDepartment[Math.floor(Math.random() * nameDepartment.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"NameDepartment\", nameDepartment());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 409', function () {\r",
													"    pm.response.to.have.status(409);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).alert[0]).to.eql(\"Não é possível salvar esse registro. Departamento já cadastrado no sistema.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"departmentName\": \"Teste\",\r\n    \"costCenterId\": \"{{IDcostCenter}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/department/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"department",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "costCenterId: null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function nameDepartment(){\r",
													"    var nameDepartment = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
													"    var randomItem = nameDepartment[Math.floor(Math.random() * nameDepartment.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"NameDepartment\", nameDepartment());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"\r",
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'ID do centro de custos' é obrigatório.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"departmentName\": \"{{NameDepartment}}\",\r\n    \"costCenterId\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/department/",
											"host": [
												"{{url}}api"
											],
											"path": [
												"department",
												""
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"auth": {
						"type": "apikey",
						"apikey": [
							{
								"key": "value",
								"value": "{{token}}",
								"type": "string"
							},
							{
								"key": "in",
								"value": "query",
								"type": "string"
							},
							{
								"key": "key",
								"value": "token",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "API Edit",
					"item": [
						{
							"name": "Exception",
							"item": [
								{
									"name": "departmentName: duplicated",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function nameDepartment(){\r",
													"    var nameDepartment = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
													"    var randomItem = nameDepartment[Math.floor(Math.random() * nameDepartment.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"NameDepartment\", nameDepartment());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 409', function () {\r",
													"    pm.response.to.have.status(409);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).alert[0]).to.eql(\"Não é possível salvar esse registro. Departamento já cadastrado no sistema.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"departmentName\": \"Teste\", \r\n    \"costCenterId\": \"{{IDcostCenter}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/department/{{IDdepartment}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"department",
												"{{IDdepartment}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "costCenterId: null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function nameDepartment(){\r",
													"    var nameDepartment = [\"Inova\", \"Tech\", \"Criativa\", \"New\", \"Meta\", \"Alfa\", \"Beta\", \"Ltda\", \"Prime\", \"Solution\", \"Swift\", \"Power\", \"Tecno\", \"Digital\", \"Hight\", \"Easy\", \"Inteligente\", \"Vision\", \"Solution\", \"Inspire\", \"Aspitre\", \"Connect\", \"Mind\", \"Idea\", \"Lab\", \"Innova\", \"Imagine\", \"Quantun\", \"Genius\", \"Click\", \"Original\", \"Secret\", \"Versátil\", \"Geek\", \"Operação\", \"Logística\", \"Mecanica\", \"Advogacia\",\"Medicina\",\"Odontologia\",\"ADM\"];\r",
													"    var randomItem = nameDepartment[Math.floor(Math.random() * nameDepartment.length)];\r",
													"    return randomItem;\r",
													"}\r",
													"pm.environment.set(\"NameDepartment\", nameDepartment());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Response status code is 400', function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Check msg\", function () {\r",
													"    pm.expect(JSON.parse(responseBody).error[0]).to.eql(\"O campo 'ID do centro de custos' é obrigatório.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"departmentName\": \"{{NameDepartment}}\", \r\n    \"costCenterId\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}api/department/{{IDdepartment}}",
											"host": [
												"{{url}}api"
											],
											"path": [
												"department",
												"{{IDdepartment}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "API Edit Status",
					"item": [
						{
							"name": "succes false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 202', function () {\r",
											"    pm.response.to.have.status(202);\r",
											"})\r",
											"\r",
											"pm.test(\"Check msg\", function () {\r",
											"    pm.expect(JSON.parse(responseBody).msg).to.eql(\"Departamento inativado com sucesso!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}api/department/status/{{IDdepartment}}",
									"host": [
										"{{url}}api"
									],
									"path": [
										"department",
										"status",
										"{{IDdepartment}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "succes null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}api/department/status/{{IDdepartment}}",
									"host": [
										"{{url}}api"
									],
									"path": [
										"department",
										"status",
										"{{IDdepartment}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "API Surch",
					"item": [
						{
							"name": "success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/department/{{IDdepartment}}",
									"host": [
										"{{url}}api"
									],
									"path": [
										"department",
										"{{IDdepartment}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "id incorrect",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 500', function () {\r",
											"    pm.response.to.have.status(500);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/department/1",
									"host": [
										"{{url}}api"
									],
									"path": [
										"department",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "API List",
					"item": [
						{
							"name": "list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test(\"Check if response is a list\", function () {\r",
											"    var responseList = pm.response.json();\r",
											"    pm.expect(responseList).to.be.an('array');\r",
											"});\r",
											"\r",
											"// teste para verificar se contém True e False\r",
											"let listaResposta = pm.response.json();\r",
											"\r",
											"function hasTrueAndFalse(array) {\r",
											"    const statuses = array.map(item => item.status);\r",
											"    return statuses.includes(true) || statuses.includes(false);\r",
											"}\r",
											"\r",
											"tests[\"Contains True and/or False\"] = hasTrueAndFalse(listaResposta);\r",
											"\r",
											"\r",
											"// função para verificar ordem alfabética\r",
											"let responseItems = pm.response.json();\r",
											"\r",
											"\r",
											"function isFullnameAlphabetical(array) {\r",
											"    const fullnames = array.map(item => item.departmentName);\r",
											"\r",
											"    return JSON.stringify(fullnames) === JSON.stringify(fullnames.slice().sort());\r",
											"}\r",
											"\r",
											"// tests[\"Objects are in alphabetical order\"] = isFullnameAlphabetical(responseItems);\r",
											"\r",
											"// teste para verificar se contém campos \r",
											"let listaResponse = pm.response.json();\r",
											"\r",
											"function hasStatus(array) {\r",
											"    return array.some(item => item.hasOwnProperty('status'));\r",
											"}\r",
											"\r",
											"function hascostCenter(array) {\r",
											"    return array.some(item => item.hasOwnProperty('costCenter'));\r",
											"}\r",
											"\r",
											"function hasdepartmentName(array) {\r",
											"    return array.some(item => item.hasOwnProperty('departmentName'));\r",
											"}\r",
											"\r",
											"tests[\"Check if list contains Status\"] = hasStatus(listaResponse);\r",
											"tests[\"Check if list contains costCenter\"] = hascostCenter(listaResponse);\r",
											"tests[\"Check if list contains departmentName\"] = hasdepartmentName(listaResponse);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/department/",
									"host": [
										"{{url}}api"
									],
									"path": [
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "count",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is Create 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test(\"Check count is number\", function () {\r",
											"    pm.expect(JSON.parse(responseBody).count).to.be.a('Number')\r",
											"});\r",
											"\r",
											"pm.test(\"Check count is equal or greater than zero\", function () {\r",
											"    pm.expect(JSON.parse(responseBody).count).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Check count is present in the response\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property('count');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}api/department/count",
									"host": [
										"{{url}}api"
									],
									"path": [
										"department",
										"count"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "in",
						"value": "query",
						"type": "string"
					},
					{
						"key": "value",
						"value": "{{token}}",
						"type": "string"
					},
					{
						"key": "key",
						"value": "token",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}